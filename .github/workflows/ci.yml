name: CI

on:
  schedule:
    - cron: "0 12 * * *"
  push:
    branches:
      - master
      - /^greenkeeper/.*$/
      - /^\d+\.\d+\.\d(-alpha\.\d+|-beta\.\d+|-rc\.\d+)?$/
  pull_request:
    branches:
      - master


jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      LOGS_DIR: /tmp/stark/logs
      LOGS_FILE: /tmp/stark/logs/build-perf.log
    strategy:
      matrix:
        node_version: ['8', '10', '12']
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Create file & folder for Travis logs
      run: |
        # cfr scripts/_travis-fold.sh
        mkdir -p $LOGS_DIR
        touch $LOGS_FILE
    - name: List main variables
      run: |
        echo "Commit SHA  : ${GITHUB_SHA}"
        echo "Reference   : ${GITHUB_REF}"
        echo "Event       : ${GITHUB_EVENT_NAME}"
        AUTHOR_NAME="$(git log -1 $GITHUB_SHA --pretty="%aN")"
        echo "Author      : ${AUTHOR_NAME}"
        export TZ=Europe/Brussels
        npm i -g npm@6.9.2
        NODE_VERSION="$(node -v)"
        echo "Node version: $NODE_VERSION"
        echo $NPM_FAKE_TOKEN;
        # This ensures that we are authenticated without requiring to have an actual .npmrc file within the project
        echo "//registry.npmjs.org/:_authToken=${NPM_FAKE_TOKEN}" >> ~/.npmrc
        cat ~/.npmrc

    - name: Run script print-logs
      run: bash ./scripts/ci/print-logs.sh
